let itsukiCount=0;let upgradeLevel=0;let clickValue=1;const itsukiCountDisplay=document.getElementById("itsukiCount");const cookieImage=document.getElementById("cookieImage");const facilityList=document.getElementById("facilityList");const unitNames=['','万','億','兆','京','垓','秭','穣','溝','澗','正','載','極','恒河沙','阿僧祇','那由他','不可思議','ヤバいつき','宇宙いつき','ゴミいつき','バカいつき','アホいつき','非常識いつき','それはありえないいつき','いとおかしいつき','和歌いつき','ありえないつき'];const clickSound=document.getElementById("clickSound");const upgradeButton=document.getElementById("upgradeButton");const upgradeCostDisplay=document.getElementById("upgradeCost");let clickHandler=()=>{const upgradeCost=calculateUpgradeCost();if(itsukiCount>=upgradeCost){itsukiCount-=upgradeCost;increaseClickValue();updateUpgradeCostDisplay()} itsukiCount+=clickValue;updateDisplay();clickSound.currentTime=0;clickSound.play();saveGame()};const saveKey="itsukiClickerSave";const savedData=JSON.parse(localStorage.getItem(saveKey));if(savedData){itsukiCount=savedData.itsukiCount||itsukiCount} const facilities=[{name:"はるや",baseCost:20,baseIncome:2,owned:0},{name:"そふと",baseCost:80,baseIncome:10,owned:0},{name:"いつき農場",baseCost:110,baseIncome:100,owned:0},{name:"いつき工ハック場",baseCost:180,baseIncome:680,owned:0},{name:"すばる",baseCost:240,baseIncome:2500,owned:0},{name:"いつきハック",baseCost:320,baseIncome:10000000,owned:0},{name:"スーパーいつき5000",baseCost:8000,baseIncome:100000000,owned:0},{name:"いつき研究所",baseCost:100000,baseIncome:170000000,owned:0},{name:"メカはるや",baseCost:100000000000,baseIncome:50000000000,owned:0}];upgradeButton.addEventListener("click",()=>{performUpgrade();updateUpgradeCostDisplay();updateDisplay()});cookieImage.removeEventListener("click",clickHandler);cookieImage.addEventListener("click",clickHandler);const addItsukiFromConsole=(amount)=>{itsukiCount+=amount;updateDisplay();saveGame()};function increaseClickValue(){clickValue*=1.8;upgradeLevel++} function calculateUpgradeCost(){return Math.floor(10*Math.pow(2,upgradeLevel))} function updateUpgradeCostDisplay(){const upgradeCost=calculateUpgradeCost();upgradeCostDisplay.textContent=formatNumberWithUnits(upgradeCost)} function resetGame(){localStorage.removeItem(saveKey);location.reload()} function performUpgrade(){const upgradeCost=calculateUpgradeCost();if(itsukiCount>=upgradeCost){itsukiCount-=upgradeCost;increaseClickValue();updateDisplay();updateUpgradeCostDisplay();saveGame()}} function formatNumberWithUnits(number){if(isNaN(number)){return `0 ${unitNames[0]}`} const unitCount=Math.floor(Math.log10(number)/4);const unitName=unitNames[Math.min(unitCount,unitNames.length-1)];const numWithUnit=(number/Math.pow(10,unitCount*4)).toFixed(2);if(unitCount>unitNames.length-1){const extraUnits=unitCount-(unitNames.length-1);return `${numWithUnit} ${unitName}以上${extraUnits}恒河沙`}else{return `${numWithUnit} ${unitName}`}} function updateDisplay(){itsukiCountDisplay.textContent=formatNumberWithUnits(itsukiCount);updateFacilityList()} function updateFacilityList(){facilityList.innerHTML="<h2>施設一覧</h2>";for(const facility of facilities){const facilityButton=document.createElement("button");facilityButton.textContent=`${facility.name} (${formatNumberWithUnits(facility.baseCost)} ポイント) - 所有数: ${facility.owned}`;facilityButton.addEventListener("click",()=>{purchaseFacility(facility)});facilityList.appendChild(facilityButton)}} function purchaseFacility(facility){if(itsukiCount>=facility.baseCost){itsukiCount-=facility.baseCost;facility.owned++;facility.baseCost=Math.floor(facility.baseCost*Math.pow(2,facility.owned));startGeneratingIncome(facility);updateDisplay();saveGame()}} function startGeneratingIncome(facility){setInterval(()=>{itsukiCount+=facility.baseIncome*facility.owned;updateDisplay();saveGame()},1000)} function saveGame(){const dataToSave={itsukiCount:itsukiCount,facilities:facilities,upgradeLevel:upgradeLevel};localStorage.setItem(saveKey,JSON.stringify(dataToSave))} if(savedData){itsukiCount=savedData.itsukiCount||itsukiCount;upgradeLevel=savedData.upgradeLevel||upgradeLevel;if(savedData.facilities){for(let i=0;i<savedData.facilities.length;i++){facilities[i].owned=savedData.facilities[i].owned;facilities[i].baseCost=savedData.facilities[i].baseCost;if(facilities[i].owned>0){startGeneratingIncome(facilities[i])}}} clickHandler();updateDisplay();updateFacilityList();updateUpgradeCostDisplay()}
